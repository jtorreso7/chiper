{"version":3,"sources":["actions/action-types.ts","reducer/index.ts","const.ts","store/index.tsx","utility.ts","components/ErrorBoundary.tsx","services.tsx","actions/index.ts","components/Layout/GridLayout.tsx","components/CaseCard.tsx","pages/Home/HomeResultDisplay.tsx","pages/Home/HomeHeader.tsx","pages/Home/HomeSearchInput.tsx","pages/Home/Home.tsx","pages/NotFound/NotFound.tsx","pages/Error/Error.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SEARCH_CASES_LOADING","SEARCH_CASES_DATA_SUCCESS","SEARCH_CASES_DATA_ERROR","initialState","items","query","isLoading","errorMessage","page","total","appendToState","persistConfig","key","storage","persistReducer","state","action","payload","type","undefined","storeEnhancers","compose","store","createStore","rootReducer","applyMiddleware","thunk","persistor","persistStore","logger","console","log","ErrorBoundary","hasError","error","this","href","process","props","children","Component","axiosInstance","axios","create","baseURL","timeout","headers","interceptors","request","use","config","data","humps","decamelizeKeys","response","camelizeKeys","status","message","Promise","reject","searchFetch","a","window","fetch","then","res","json","catch","e","Error","initialPayload","gridLayoutClass","css","paginationClass","GridContainer","styled","Flex","Image","CaseCard","defaultImage","case","large_img","title","description","date_stolen","stolen_location","width","justifyContent","alt","src","Section","HomeResultDisplay","cases","onLoadMore","resultLength","length","className","map","repo","id","innerClass","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","prevPageText","firstPageText","lastPageText","nextPageText","Heading","SubHeading","HomeHeader","alignItems","pl","dateRangeInputPhrases","datepickerStartDatePlaceholder","datepickerStartDateLabel","datepickerEndDatePlaceholder","datepickerEndDateLabel","resetDates","close","startDateAriaLabel","endDateAriaLabel","startDatePlaceholder","endDatePlaceholder","SearchInput","ButtonStyle","height","border","borderRadius","fontFamily","color","fontSize","fontWeight","backgroundColor","cursor","ThemeDatePicker","breakpoints","reactDatepicker","daySize","colors","accessibility","selectedDay","selectedDayHover","primaryColor","dateRangeGridTemplateColumns","gridTemplateColumns","dateRangeStartDateInputPadding","dateRangeEndDateInputPadding","HomeSearchInput","onInputChange","useState","setQuery","useReducer","focusedInput","startDate","endDate","dispatch","mt","flexDirection","element","minLength","debounceTimeout","placeholder","target","value","theme","onDatesChange","onFocusChange","phrases","variant","mr","sx","onClick","SearchContainer","Search","HomeConnected","connect","searchCases","term","getState","parseInt","searchNextUsers","pageNumber","caseList","useEffect","hasInputValue","NotFound","TypeError","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAAMA,EAAuB,uBACvBC,EAA4B,4BAC5BC,EAA0B,0BCoBnBC,EAAe,CAC1BC,MAAO,GACPC,MAAO,GACPC,WAAW,EACXC,aAAc,GACdC,KChBwB,EDiBxBC,MAAO,EACPC,eAAe,GA2CXC,EAAgB,CACpBC,IAAK,OACLC,Q,OAAAA,GAGaC,cAAeH,GA7CV,SAACI,EAA2BC,GAC9C,IAAQC,EAAkBD,EAAlBC,QAASC,EAASF,EAATE,KACjB,EACED,GAAW,GADLZ,EAAR,EAAQA,MAAOD,EAAf,EAAeA,MAAOI,EAAtB,EAAsBA,KAAMC,EAA5B,EAA4BA,MAAOF,EAAnC,EAAmCA,aAGnC,QAAcY,IAAVJ,EACF,OAAOZ,EAGT,OAAQe,GACN,KAAKlB,EACH,OAAO,2BACFe,GADL,IAEET,WAAW,EACXC,aAAc,KAGlB,KAAKN,EACH,OAAO,2BACFc,GADL,IAEEX,MAAOA,EACPK,QACAD,OACAH,QACAC,WAAW,EACXC,aAAc,KAGlB,KAAKL,EACH,OAAO,2BACFa,GADL,IAEET,WAAW,EACXC,iBAGJ,QACE,OAAOJ,ME9DPiB,EAAiBC,IACjBC,EAAQC,YACZC,EACAJ,EAAeK,YAAgBC,OAGpBC,EAAYC,YAAaN,GAEvBA,I,gCCdTO,EACC,WAAwB,IAAD,GAE1B,EAAAC,SAAQC,IAAR,oB,OCGEC,E,4MACJjB,MAAe,CACbkB,UAAU,G,uDAOZ,SAAkBC,GAChBL,EAAWK,K,oBAGb,WACE,OAAIC,KAAKpB,MAAMkB,SACN,eAAC,WAAD,WACL,iIACA,uBACA,uBACA,uBAJK,SAKC,mBAAGG,KAAMC,UAAT,kBALD,kBAQFF,KAAKG,MAAMC,Y,uCAlBpB,WACE,MAAO,CAAEN,UAAU,O,GANKO,aA2BbR,I,gGC3BTS,EAAgBC,IAAMC,OAAO,CACjCC,QJKe,mCIJfC,QAAS,IACTC,QAAS,CACP,eAAgB,sBAIpBL,EAAcM,aAAaC,QAAQC,KAAI,SAACC,GAItC,OAHIA,EAAOC,OACTD,EAAOC,KAAOC,IAAMC,eAAeH,EAAOC,OAErCD,KAGTT,EAAcM,aAAaO,SAASL,KAClC,SAACK,GAEC,OADAA,EAASH,KAAOC,IAAMG,aAAaD,EAASH,MACrCG,KAET,SAACpB,GACC,IAAQoB,EAAapB,EAAboB,SAKR,OAJAzB,EAAW,UAAW,CACpB2B,OAAQF,EAASE,OACjBC,QAASH,EAASH,KAAKM,UAElBC,QAAQC,OAAOL,EAASH,KAAKM,YAIxC,I,gCAaMG,GAAW,uCAAG,4CAAAC,EAAA,6DAAOxD,EAAP,+BAAuB,GAAIG,EAA3B,+BAA0C,EAA1C,kBAEOsD,OACpBC,MADoB,4CACuBvD,EADvB,kBACqCH,IACzD2D,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZC,OAAM,SAACC,GACN,MAAMC,MAAMD,MARA,cAEVd,EAFU,wCAWJA,IAXI,oGAAH,qDCrCXgB,GAAiB,CACrBhE,WAAW,EACXE,KLHwB,EKIxBE,eAAe,EACfH,aAAc,GACdF,MAAO,GACPD,MAAO,ICdHmE,GAAkBC,YAAH,4IASfC,GAAkBD,YAAH,geA6BfE,GAAgBC,kBAAOC,IAAPD,CAAH,6PCrCbE,GAAQF,kBAAO,MAAPA,CAAH,qFAsCIG,GAhCE,SAACxC,GAChB,IAAMyC,EAAe,uBACrB,EAQIzC,EAPF0C,KADF,IAEIC,iBAFJ,MAEgBF,EAFhB,EAGIG,EAHJ,EAGIA,MACAC,EAJJ,EAIIA,YACAC,EALJ,EAKIA,YACAC,EANJ,EAMIA,gBAGJ,OACE,eAACX,GAAD,WACE,cAAC,IAAD,CAAMY,MAAM,MAAMC,eAAe,SAAjC,SACE,cAACV,GAAD,CAAOW,IAAI,cAAcC,IAAKR,GAAaF,MAE7C,eAAC,IAAD,CAAKO,MAAM,MAAX,UACE,yCAAYJ,KACZ,4BACGC,GAAW,0FAGd,sCACMC,GAAe,eADrB,cAEIC,GAAe,0B,oBCrBrBK,GAAUf,kBAAO,UAAPA,CAAH,qFA6CEgB,GAvCW,SAAC,GAMK,IAL9BC,EAK6B,EAL7BA,MACAtF,EAI6B,EAJ7BA,UACAuF,EAG6B,EAH7BA,WACArF,EAE6B,EAF7BA,KACAC,EAC6B,EAD7BA,MAEMqF,EAAeF,EAAMG,OAE3B,OAAIzF,EACK,sDAGJA,GAA8B,IAAjBwF,EAKhB,eAACJ,GAAD,WACE,qBAAKM,UAAWzB,GAAhB,SACGqB,EAAMK,KAAI,SAACC,GAAD,OACT,cAAC,GAAD,CAAwBlB,KAAMkB,GAAfA,EAAKC,SAGxB,cAAC,KAAD,CACEC,WAAY3B,GACZ4B,WAAY7F,EACZ8F,kBAAmB,GACnBC,gBAAiB9F,EACjB+F,mBAAoB,EACpBC,SAAUZ,EACVa,aAAa,SACbC,cAAc,WACdC,aAAa,UACbC,aAAa,cApBV,0DC9BLC,GAAUnC,kBAAO,KAAPA,CAAH,8DAKPoC,GAAapC,kBAAO,OAAPA,CAAH,4GAOVE,GAAQF,kBAAO,MAAPA,CAAH,gEAeIqC,GAVI,kBACjB,eAAC,IAAD,CAAMC,WAAW,SAAjB,UACE,cAAC,GAAD,CAAOzB,IAAI,cAAcC,IAAI,8BAC7B,eAAC,IAAD,CAAKyB,GAAI,EAAT,UACE,cAACJ,GAAD,0CACA,cAACC,GAAD,kC,0BCVAI,GAAqB,2BATD,CACxBC,+BAAgC,SAChCC,yBAA0B,cAC1BC,6BAA8B,SAC9BC,uBAAwB,YACxBC,WAAY,cACZC,MAAO,UAGkB,IAEzBC,mBAAoB,aACpBC,iBAAkB,WAClBC,qBAAsB,aACtBC,mBAAoB,aAGhBC,GAA6BnD,kBAAO,QAAPA,CAAH,8QAa1BoD,GAAc,CAClBzC,MAAO,OACP0C,OAAQ,GACRC,OAAQ,oBACRC,aAAc,MACdC,WAAY,2BACZC,MAAO,UACPC,SAAU,OACVC,WAAY,IACZC,gBAAiB,cACjBC,OAAQ,WAGJC,GAAkB,CACtBC,YAAa,CAAC,OAAQ,OAAQ,QAC9BC,gBAAiB,CACfC,QAAS,CAAC,GAAI,IACdT,WAAY,2BACZU,OAAQ,CACNC,cAAe,UACfC,YAAa,UACbC,iBAAkB,WAClBC,aAAc,WAEhBC,6BAA8B,CAC5BC,oBAAqB,eAEvBC,+BAAgC,SAChCC,6BAA8B,WAsFnBC,GA9ES,SAAChH,GACvB,IAAQiH,EAAkBjH,EAAlBiH,cACR,EAA0BC,mBAAiB,IAA3C,mBAAOnJ,EAAP,KAAcoJ,EAAd,KAmBA,MAA0BC,sBAX1B,SAAiB3I,EAAYC,GAC3B,OAAQA,EAAOE,MACb,IAAK,cACH,OAAO,2BAAKH,GAAZ,IAAmB4I,aAAc3I,EAAOC,UAC1C,IAAK,aACH,OAAOD,EAAOC,QAChB,QACE,MAAM,IAAIoD,SAbK,CACnBuF,UAAW,KACXC,QAAS,KACTF,aAAc,OAchB,mBAAO5I,EAAP,KAAc+I,EAAd,KAWA,OACE,cAAC,IAAD,CAAMC,GAAI,GAAIC,cAAc,SAA5B,SACE,eAAC,IAAD,CAAM/C,WAAW,SAAjB,UACE,cAAC,IAAD,CAAKC,GAAI,EAAG5B,MAAM,MAAlB,SACE,cAAC,iBAAD,CACE2E,QAASnC,GACToC,UAAW,EACXC,gBAAiB,IACjBC,YAAY,8BACZ3D,SAlBgB,SAACrC,GACzB,IAAM/D,EAAQ+D,EAAEiG,OAAOC,MAKvBb,EAJKpJ,GACM,SAkBP,cAAC,IAAD,CAAK6G,GAAI,EAAG5B,MAAM,MAAlB,SACE,cAAC,KAAD,CAAeiF,MAAO9B,GAAtB,SACE,cAAC,KAAD,CACE+B,cAAe,SAACrH,GAAD,OACb2G,EAAS,CAAE5I,KAAM,aAAcD,QAASkC,KAE1CsH,cAAe,SAACd,GAAD,OACbG,EAAS,CAAE5I,KAAM,cAAeD,QAAS0I,KAE3CC,UAAW7I,EAAM6I,UACjBC,QAAS9I,EAAM8I,QACfF,aAAc5I,EAAM4I,aACpBe,QAASvD,SAIf,cAAC,IAAD,CAAKD,GAAI,EAAG5B,MAAM,MAAlB,SACE,cAAC,IAAD,CACEqF,QAAQ,UACRC,GAAI,EACJC,GAAI9C,GACJ+C,QAAS,WAEPvB,EAAclJ,IANlB,gCCxGJ0K,GAAkBpG,kBAAOC,IAAPD,CAAH,uOAafqG,GAASrG,kBAAOC,IAAPD,CAAH,8CAINN,GAAQM,kBAAO,MAAPA,CAAH,mEAmFLsG,IA9ESzG,YAAH,sFA8EU0G,aAFE,SAACnK,GAAD,OAAgBA,KAPb,SAAC+I,GAC1B,MAAO,CACLqB,YAAa,SAACC,GAAD,OAAetB,GNtGXzJ,EMsGgC+K,ENrGnD,uCAAO,WAAOtB,EAA6BuB,GAApC,eAAAxH,EAAA,6DACLiG,EAAS,CACP5I,KAAMlB,EACNiB,QAAQ,2BACHqD,IADE,IAELhE,WAAW,MALV,kBASoBsD,GAAYvD,ELpBf,GKWjB,OASGiD,EATH,OAUHwG,EAAS,CACP5I,KAAMjB,EACNgB,QAAQ,2BACHqD,IADE,IAELlE,MAAOkD,EAASlD,MAChBK,MAAO6K,SAAShI,EAAS7C,MAAO,IAChCD,KL3BgB,EK4BhBH,QACAK,eAAe,MAlBhB,gDAsBHoJ,EAAS,CACP5I,KAAMhB,EACNe,QAAQ,2BACHqD,IADE,IAEL/D,aAAY,SA1Bb,yDAAP,0DADkB,IAACF,GMuGjBkL,gBAAiB,SAAClL,EAAemL,GAAhB,OACf1B,ENtEkB,SAACzJ,EAAemL,GACtC,8CAAO,WAAO1B,EAA6BuB,GAApC,eAAAxH,EAAA,6DACLiG,EAAS,CACP5I,KAAMlB,EACNiB,QAAQ,2BACHqD,IADE,IAELhE,WAAW,MALV,kBAUoBsD,GAAYvD,EAAOmL,GAVvC,OAUGlI,EAVH,OAWHwG,EAAS,CACP5I,KAAMjB,EACNgB,QAAQ,2BACHqD,IADE,IAELlE,MAAOkD,EAASlD,MAChBI,KAAMgL,EACNnL,QACAI,MAAO6C,EAAS7C,MAChBC,eAAe,MAnBhB,gDAuBHoJ,EAAS,CACP5I,KAAMhB,EACNe,QAAQ,2BACHqD,IADE,IAEL/D,aAAY,SA3Bb,yDAAP,wDMqEagL,CAAgBlL,EAAOmL,QAKhBN,EAxET,SAAC5I,GACZ,MAQIA,EAPFlC,aADF,MACU,GADV,IAQIkC,EANF6I,mBAFF,MAEgB,aAFhB,IAQI7I,EALFiJ,uBAHF,MAGoB,aAHpB,IAQIjJ,EAJF/B,oBAJF,MAIiB,GAJjB,IAQI+B,EAHFhC,iBALF,WAQIgC,EAFF9B,YANF,MAMS,EANT,IAQI8B,EADF7B,aAPF,MAOU,EAPV,EAUA,EAA0B+I,mBAAiB,IAA3C,mBAAOnJ,EAAP,KAAcoJ,EAAd,KAEMgC,EAAWrL,EAGjBsL,qBAAU,WAENP,EAAY9K,KAGb,IAgBH,OACE,eAAC0K,GAAD,CAAiBf,cAAc,SAAS2B,cAAgC,IAAjBtL,EAAM0F,OAA7D,UACE,eAACiF,GAAD,CAAQhB,cAAc,SAAtB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,CAAiBT,cAlBG,SAACe,GAEpBA,GAILb,EAASa,GACTa,EAAYb,IAJVb,EAAS,WAiBPlJ,GACA,cAAC,IAAD,CAAMwJ,GAAI,EAAV,SACE,cAAC,GAAD,CACEzJ,UAAWA,EACXuF,WAdiB,SAAC2F,GAC1BD,EAAgBlL,EAAOmL,IAcf5F,MAAO6F,EACPjL,KAAMA,EACNC,MAAOA,MAIZF,GACC,cAAC,IAAD,CAAMwJ,GAAI,EAAV,SACE,cAAC,GAAD,UAAQxJ,aAiBH0K,MC5HAW,GANE,WACf,OAAO,2DCEMvH,GAJD,WACZ,MAAM,IAAIwH,UAAU,eCoCPC,OAxBf,WACE,OACE,cAAC,EAAD,UACE,cAAC,IAAD,CAAUxK,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaK,UAAWA,EAAxB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACA,cAAC,IAAD,CAAOoK,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,gBAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,GAAD,kBCbDC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBnI,MAAK,YAAkD,IAA/CoI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8c471f28.chunk.js","sourcesContent":["const SEARCH_CASES_LOADING = \"SEARCH_CASES_LOADING\";\nconst SEARCH_CASES_DATA_SUCCESS = \"SEARCH_CASES_DATA_SUCCESS\";\nconst SEARCH_CASES_DATA_ERROR = \"SEARCH_CASES_DATA_ERROR\";\n\nexport {\n  SEARCH_CASES_LOADING,\n  SEARCH_CASES_DATA_SUCCESS,\n  SEARCH_CASES_DATA_ERROR,\n};\n","import { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport {\n  SEARCH_CASES_LOADING,\n  SEARCH_CASES_DATA_SUCCESS,\n  SEARCH_CASES_DATA_ERROR,\n} from \"../actions/action-types\";\nimport { FIRST_PAGE_NUMBER } from \"../const\";\nimport { ICase } from \"../pages/Home/HomeSearcher.interfaces\";\nimport { AnyAction } from \"redux\";\n\ninterface IState {\n  items: ICase[];\n  query: string;\n  isLoading: boolean;\n  errorMessage: string;\n  total: number;\n  page: number;\n  appendToState: boolean;\n}\n\nexport const initialState = {\n  items: [],\n  query: \"\",\n  isLoading: false,\n  errorMessage: \"\",\n  page: FIRST_PAGE_NUMBER,\n  total: 0,\n  appendToState: false,\n};\n\nconst rootReducer = (state: IState | undefined, action: AnyAction) => {\n  const { payload, type } = action;\n  const { query, items, page, total, errorMessage } =\n    payload || {};\n\n  if (state === undefined) {\n    return initialState;\n  }\n\n  switch (type) {\n    case SEARCH_CASES_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        errorMessage: \"\",\n      };\n\n    case SEARCH_CASES_DATA_SUCCESS:\n      return {\n        ...state,\n        items: items,\n        total,\n        page,\n        query,\n        isLoading: false,\n        errorMessage: \"\",\n      };\n\n    case SEARCH_CASES_DATA_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        errorMessage,\n      };\n\n    default:\n      return initialState;\n  }\n};\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nexport default persistReducer(persistConfig, rootReducer);\n","const SUPPORTED_ENTITIES: { [key: string]: string } = {\n  USERS: 'USERS',\n  REPO: 'REPO'\n}\n\nconst API_SEARCH_KEYS: { [key: string]: string } = {\n  USERS: 'users',\n  REPO: 'repositories'\n}\n\nconst ITEMS_PER_PAGE = 10;\nconst FIRST_PAGE_NUMBER = 1;\nconst BASE_URL = 'https://bikeindex.org:443/api/v3';\n\nexport {\n  SUPPORTED_ENTITIES,\n  API_SEARCH_KEYS,\n  FIRST_PAGE_NUMBER,\n  BASE_URL,\n  ITEMS_PER_PAGE\n}","import { createStore, compose, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { persistStore } from 'redux-persist'\n\nimport rootReducer from '../reducer'\n\nconst storeEnhancers = compose\nconst store = createStore(\n  rootReducer,\n  storeEnhancers(applyMiddleware(thunk))\n)\n\nexport const persistor = persistStore(store);\n\nexport default store","const logger = {\n  log: (...message: any[]) => {\n    // call to any logger service like Sentry, LogRocket to log the error \n    console.log(...message);\n  },\n}\n\nexport {\n  logger\n}","import React, { Component, Fragment } from 'react';\nimport { logger } from '../utility';\ninterface State {\n  hasError: boolean;\n}\n\nclass ErrorBoundary extends Component {\n  state: State = {\n    hasError: false\n  };\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error) {\n    logger.log(error);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <Fragment>\n        <h2>This is how you can handle global errors inside you app! Now next time don't click 💣</h2>\n        <br/>\n        <br/>\n        <br />\n        Click <a href={process.env.PUBLIC_URL}>here</a> to go back!\n      </Fragment>\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;","import axios from \"axios\";\nimport humps from \"humps\";\n\nimport { ITEMS_PER_PAGE, BASE_URL } from \"./const\";\nimport { logger } from \"./utility\";\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  timeout: 10000,\n  headers: {\n    \"content-type\": \"application/json\",\n  },\n});\n\naxiosInstance.interceptors.request.use((config) => {\n  if (config.data) {\n    config.data = humps.decamelizeKeys(config.data);\n  }\n  return config;\n});\n\naxiosInstance.interceptors.response.use(\n  (response) => {\n    response.data = humps.camelizeKeys(response.data);\n    return response;\n  },\n  (error) => {\n    const { response } = error;\n    logger.log(\"Error :\", {\n      status: response.status,\n      message: response.data.message,\n    });\n    return Promise.reject(response.data.message);\n  }\n);\n\nconst search = async (query: string, page: number) => {\n  try {\n    const response = await axiosInstance({\n      method: \"get\",\n      url: `/search?location=Berlin&per_page=${ITEMS_PER_PAGE}&page=${page}&query=${query}&access_token=S6Khp0Ja1_328-GLafr7Z16KXxiJ6dya8t3HxYtT3t4`,\n    });\n\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst searchFetch = async (query: string = \"\", page: number = 1) => {\n  try {\n    const response = await window\n      .fetch(`http://54.211.49.192/api.php?page=${page}&query=${query}`)\n      .then((res) => {\n        return res.json();\n      })\n      .catch((e) => {\n        throw Error(e);\n      });\n\n    return { ...response };\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport { search, searchFetch };\n","import delve from \"dlv\";\nimport { Dispatch } from \"redux\";\n\nimport { FIRST_PAGE_NUMBER } from \"../const\";\nimport { IAction } from \"../pages/Home/HomeSearcher.interfaces\";\nimport { searchFetch } from \"../services\";\nimport {\n  SEARCH_CASES_LOADING,\n  SEARCH_CASES_DATA_SUCCESS,\n  SEARCH_CASES_DATA_ERROR,\n} from \"./action-types\";\n\nconst initialPayload = {\n  isLoading: false,\n  page: FIRST_PAGE_NUMBER,\n  appendToState: false,\n  errorMessage: \"\",\n  query: \"\",\n  items: [],\n};\n\nconst searchCases = (query: string) => {\n  return async (dispatch: Dispatch<IAction>, getState: Function) => {\n    dispatch({\n      type: SEARCH_CASES_LOADING,\n      payload: {\n        ...initialPayload,\n        isLoading: true,\n      },\n    });\n    try {\n      const response = await searchFetch(query, FIRST_PAGE_NUMBER);\n      dispatch({\n        type: SEARCH_CASES_DATA_SUCCESS,\n        payload: {\n          ...initialPayload,\n          items: response.items,\n          total: parseInt(response.total, 10),\n          page: FIRST_PAGE_NUMBER,\n          query,\n          appendToState: true,\n        },\n      });\n    } catch (errorMessage: any) {\n      dispatch({\n        type: SEARCH_CASES_DATA_ERROR,\n        payload: {\n          ...initialPayload,\n          errorMessage,\n        },\n      });\n    }\n  };\n};\n\nconst searchNextUsers = (query: string, pageNumber: number) => {\n  return async (dispatch: Dispatch<IAction>, getState: Function) => {\n    dispatch({\n      type: SEARCH_CASES_LOADING,\n      payload: {\n        ...initialPayload,\n        isLoading: true,\n      },\n    });\n\n    try {\n      const response = await searchFetch(query, pageNumber);\n      dispatch({\n        type: SEARCH_CASES_DATA_SUCCESS,\n        payload: {\n          ...initialPayload,\n          items: response.items,\n          page: pageNumber,\n          query,\n          total: response.total,\n          appendToState: true,\n        },\n      });\n    } catch (errorMessage: any) {\n      dispatch({\n        type: SEARCH_CASES_DATA_ERROR,\n        payload: {\n          ...initialPayload,\n          errorMessage,\n        },\n      });\n    }\n  };\n};\n\nexport { searchCases, searchNextUsers };\n","import styled from \"@emotion/styled\";\nimport { css } from \"@emotion/css\";\nimport { Flex } from \"rebass\";\n\nconst gridLayoutClass = css`\n  overflow: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 10px;\n  width: 100%;\n`;\n\nconst paginationClass = css`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  width: 70%;\n  margin: 34px auto;\n  list-style: none;\n\n  li {\n    &.active {\n      a {\n        border: 1px solid #db8129;\n        border-radius: 100%;\n      }\n    }\n  }\n\n  a {\n    text-decoration: none;\n    color: #db8129;\n    padding: 10px;\n    min-width: 40px;\n    height: 40px;\n    display: block;\n    text-align: center;\n    font-weight: 600;\n  }\n`;\n\nconst GridContainer = styled(Flex)`\n  border: 1px solid #bcbec0;\n  padding: 10px;\n  align-items: center;\n  border-radius: 3px;\n  transition: background 300ms;\n  display: flex;\n  width: 100%;\n  color: #1e1e1e;\n  &:hover {\n    background: #ededed;\n  }\n`;\n\nexport { gridLayoutClass, GridContainer, paginationClass };\n","import { Flex, Box } from \"rebass\";\nimport styled from \"@emotion/styled\";\nimport { ICase } from \"../pages/Home/HomeSearcher.interfaces\";\nimport { GridContainer } from \"./Layout/GridLayout\";\n\nconst Image = styled(\"img\")`\n  width: 100px;\n  height: auto;\n  border-radius: 6px;\n`;\n\nconst CaseCard = (props: { case: ICase }) => {\n  const defaultImage = \"./images/cyclist.png\";\n  const {\n    case: {\n      large_img = defaultImage,\n      title,\n      description,\n      date_stolen,\n      stolen_location,\n    },\n  } = props;\n  return (\n    <GridContainer>\n      <Flex width=\"20%\" justifyContent=\"center\">\n        <Image alt=\"Github Logo\" src={large_img || defaultImage} />\n      </Flex>\n      <Box width=\"60%\">\n        <h3>Stolen {title}</h3>\n        <p>\n          {description ||\n            `Registry without description about this case in the dataBase of the police of Berlin.`}\n        </p>\n        <p>\n          {`${date_stolen || \"Not has date\"} - ${\n            stolen_location || ` No location.`\n          }`}\n        </p>\n      </Box>\n    </GridContainer>\n  );\n};\n\nexport default CaseCard;\n","import { ICase } from \"./HomeSearcher.interfaces\";\nimport CaseCard from \"../../components/CaseCard\";\nimport { gridLayoutClass, paginationClass } from \"../../components/Layout\";\nimport styled from \"@emotion/styled\";\nimport Pagination from \"react-js-pagination\";\n\ninterface IHomeResultDisplayProps {\n  onLoadMore: (pageNumber: number) => void;\n  cases: ICase[];\n  page: number;\n  total: number;\n  isLoading: boolean;\n}\n\nconst Section = styled(\"section\")`\n  width: 100%;\n  min-height: 400px;\n  display: block;\n`;\n\nconst HomeResultDisplay = ({\n  cases,\n  isLoading,\n  onLoadMore,\n  page,\n  total,\n}: IHomeResultDisplayProps) => {\n  const resultLength = cases.length;\n\n  if (isLoading) {\n    return <h3>Loading ⚡️</h3>;\n  }\n\n  if (!isLoading && resultLength === 0) {\n    return <h3>No results 🔍</h3>;\n  }\n\n  return (\n    <Section>\n      <div className={gridLayoutClass}>\n        {cases.map((repo: ICase) => (\n          <CaseCard key={repo.id} case={repo} />\n        ))}\n      </div>\n      <Pagination\n        innerClass={paginationClass}\n        activePage={page}\n        itemsCountPerPage={10}\n        totalItemsCount={total}\n        pageRangeDisplayed={3}\n        onChange={onLoadMore}\n        prevPageText=\"< Prev\"\n        firstPageText=\"<< First\"\n        lastPageText=\"Last >>\"\n        nextPageText=\"Next >\"\n      />\n    </Section>\n  );\n};\nexport default HomeResultDisplay;\n","import React from \"react\";\nimport { Flex, Box } from \"rebass\";\nimport styled from \"@emotion/styled\";\n\nconst Heading = styled(\"h2\")`\n  margin: 0;\n  font-size: 3rem;\n`;\n\nconst SubHeading = styled(\"span\")`\n  color: #878787;\n  font-size: 14px;\n  font-weight: 500;\n  font-size: 2rem;\n`;\n\nconst Image = styled(\"img\")`\n  width: 100px;\n  height: auto;\n`;\n\nconst HomeHeader = () => (\n  <Flex alignItems=\"center\">\n    <Image alt=\"Github Logo\" src=\"./images/police-badge.png\" />\n    <Box pl={3}>\n      <Heading>Police Department of Berlin</Heading>\n      <SubHeading>Stolen bykes</SubHeading>\n    </Box>\n  </Flex>\n);\n\nexport default HomeHeader;\n","import { ComponentType, useReducer, useState, ChangeEvent } from \"react\";\nimport { DebounceInput } from \"react-debounce-input\";\nimport { DateRangeInput } from \"@datepicker-react/styled\";\nimport { Flex, Box, Button } from \"rebass\";\nimport { ThemeProvider } from \"styled-components\";\nimport styled from \"@emotion/styled\";\n\nconst datepickerPhrases = {\n  datepickerStartDatePlaceholder: \"Select\",\n  datepickerStartDateLabel: \"Start date:\",\n  datepickerEndDatePlaceholder: \"Select\",\n  datepickerEndDateLabel: \"End date:\",\n  resetDates: \"Reset dates\",\n  close: \"Close\",\n};\n\nconst dateRangeInputPhrases = {\n  ...datepickerPhrases,\n  startDateAriaLabel: \"Start date\",\n  endDateAriaLabel: \"End date\",\n  startDatePlaceholder: \"Start date\",\n  endDatePlaceholder: \"End date\",\n};\n\nconst SearchInput: ComponentType = styled(\"input\")`\n  width: 100%;\n  height: 48px;\n  border-color: transparent;\n  padding: 0px 10px;\n  border: 1px solid #bcbec0;\n  border-radius: 2px;\n  font-family: system-ui, -apple-system;\n  color: #001217;\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst ButtonStyle = {\n  width: \"100%\",\n  height: 48,\n  border: \"1px solid #bcbec0\",\n  borderRadius: \"2px\",\n  fontFamily: \"system-ui, -apple-system\",\n  color: \"#001217\",\n  fontSize: \"14px\",\n  fontWeight: 600,\n  backgroundColor: \"transparent\",\n  cursor: \"pointer\",\n};\n\nconst ThemeDatePicker = {\n  breakpoints: [\"32em\", \"48em\", \"64em\"],\n  reactDatepicker: {\n    daySize: [36, 40],\n    fontFamily: \"system-ui, -apple-system\",\n    colors: {\n      accessibility: \"#f5a85e\",\n      selectedDay: \"#f7d551\",\n      selectedDayHover: \" #f8c168\",\n      primaryColor: \"#f5a85e\",\n    },\n    dateRangeGridTemplateColumns: {\n      gridTemplateColumns: \"44% 12% 44%\",\n    },\n    dateRangeStartDateInputPadding: \"0 38px\",\n    dateRangeEndDateInputPadding: \"0 38px\",\n  },\n};\n\ninterface IHomeSearchInputProps {\n  onInputChange: Function;\n}\n\nconst HomeSearchInput = (props: IHomeSearchInputProps) => {\n  const { onInputChange } = props;\n  const [query, setQuery] = useState<string>(\"\");\n\n  const initialState = {\n    startDate: null,\n    endDate: null,\n    focusedInput: null,\n  };\n\n  function reducer(state: any, action: { type: any; payload: any }) {\n    switch (action.type) {\n      case \"focusChange\":\n        return { ...state, focusedInput: action.payload };\n      case \"dateChange\":\n        return action.payload;\n      default:\n        throw new Error();\n    }\n  }\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const query = e.target.value;\n    if (!query) {\n      setQuery(\"\");\n      return;\n    }\n    setQuery(query);\n  };\n\n  return (\n    <Flex mt={30} flexDirection=\"column\">\n      <Flex alignItems=\"center\">\n        <Box pl={2} width=\"40%\">\n          <DebounceInput\n            element={SearchInput}\n            minLength={3}\n            debounceTimeout={500}\n            placeholder=\"Search case descriptions...\"\n            onChange={handleInputChange}\n          />\n        </Box>\n        <Box pl={2} width=\"40%\">\n          <ThemeProvider theme={ThemeDatePicker}>\n            <DateRangeInput\n              onDatesChange={(data) =>\n                dispatch({ type: \"dateChange\", payload: data })\n              }\n              onFocusChange={(focusedInput) =>\n                dispatch({ type: \"focusChange\", payload: focusedInput })\n              }\n              startDate={state.startDate} // Date or null\n              endDate={state.endDate} // Date or null\n              focusedInput={state.focusedInput} // START_DATE, END_DATE or null\n              phrases={dateRangeInputPhrases}\n            />\n          </ThemeProvider>\n        </Box>\n        <Box pl={2} width=\"20%\">\n          <Button\n            variant=\"outline\"\n            mr={2}\n            sx={ButtonStyle}\n            onClick={() => {\n              debugger\n              onInputChange(query);\n            }}\n          >\n            Find Cases\n          </Button>\n        </Box>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default HomeSearchInput;\n","import { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Flex } from \"rebass\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/css\";\nimport { Link } from \"react-router-dom\";\n\nimport { searchCases, searchNextUsers } from \"../../actions\";\nimport { ICase } from \"./HomeSearcher.interfaces\";\nimport HomeResultDisplay from \"./HomeResultDisplay\";\n\nimport HomeHeader from \"./HomeHeader\";\nimport HomeSearchInput from \"./HomeSearchInput\";\n\ninterface IHomeSearchProps {\n  searchCases?: Function;\n  searchNextUsers?: Function;\n  searchRepo?: Function;\n  searchNextRepos?: Function;\n  items?: ICase[];\n  total?: number;\n  page?: number;\n  isLoading?: boolean;\n  errorMessage?: string;\n}\n\ninterface ISearchContainerProps {\n  hasInputValue: boolean;\n}\n\nconst SearchContainer = styled(Flex)<ISearchContainerProps>`\n  height: 80vh;\n  justify-content: center;\n  width: 80%;\n  max-width: 1020px;\n  background-color: #fff;\n  border-radius: 10px;\n  margin: auto;\n  padding: 24px;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Search = styled(Flex)`\n  width: 100%;\n`;\n\nconst Error = styled(\"div\")`\n  color: red;\n  font-weight: bold;\n`;\n\nconst corner = css`\n  position: absolute;\n  right: 25px;\n  bottom: 25px;\n`;\n\nconst Home = (props: IHomeSearchProps) => {\n  const {\n    items = [],\n    searchCases = () => {},\n    searchNextUsers = () => {},\n    errorMessage = \"\",\n    isLoading = false,\n    page = 1,\n    total = 1,\n  } = props;\n\n  const [query, setQuery] = useState<string>(\"\");\n\n  const caseList = items;\n\n  // call whenever the entity or search term changes\n  useEffect(() => {\n    const fetchData = () => {\n      searchCases(query);\n    };\n    fetchData();\n  }, []);\n\n  const handleInputChange = (value: string) => {\n    debugger\n    if (!value) {\n      setQuery(\"\");\n      return;\n    }\n    setQuery(value);\n    searchCases(value);\n  };\n\n  const handleNextPageLoad = (pageNumber: number) => {\n    searchNextUsers(query, pageNumber);\n  };\n\n  return (\n    <SearchContainer flexDirection=\"column\" hasInputValue={query.length !== 0}>\n      <Search flexDirection=\"column\">\n        <HomeHeader />\n        <HomeSearchInput onInputChange={handleInputChange} />\n      </Search>\n      {!errorMessage && (\n        <Flex mt={3}>\n          <HomeResultDisplay\n            isLoading={isLoading}\n            onLoadMore={handleNextPageLoad}\n            cases={caseList}\n            page={page}\n            total={total}\n          />\n        </Flex>\n      )}\n      {errorMessage && (\n        <Flex mt={3}>\n          <Error>{errorMessage}</Error>\n        </Flex>\n      )}\n    </SearchContainer>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    searchCases: (term: any) => dispatch(searchCases(term)),\n    searchNextUsers: (query: string, pageNumber: number) =>\n      dispatch(searchNextUsers(query, pageNumber)),\n  };\n};\nconst mapStateToProps = (state: any) => state;\n\nconst HomeConnected = connect(mapStateToProps, mapDispatchToProps)(Home);\nexport default HomeConnected;\n","\nconst NotFound = () => {\n  return <h4>\n    Seems like you are lost!\n  </h4>;\n}\n\nexport default NotFound","const Error = () => {\n  throw new TypeError('I crashed!');\n}\n\nexport default Error","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport store, { persistor } from './store'\nimport ErrorBoundary from './components/ErrorBoundary';\n\nimport {\n  Home,\n  NotFound,\n  Error\n} from './pages';\n\nfunction App() {\n  return (\n    <ErrorBoundary>\n      <Provider store={store}>\n        <PersistGate persistor={persistor}>\n          <Router>\n            <Switch>\n            <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route exact path=\"/💣\">\n                <Error />\n              </Route>\n              <Route path=\"*\">\n                <NotFound />\n              </Route>\n            </Switch>\n          </Router>\n        </PersistGate>\n      </Provider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}